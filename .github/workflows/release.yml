name: Release

on:
  push:
    branches:
      - main

env:
  THIRD_PARTY_GIT_AUTHOR_EMAIL: opensource+bot@newrelic.com
  THIRD_PARTY_GIT_AUTHOR_NAME: nr-opensource-bot

jobs:          
  generate-schema-docs:
    name: Generate GraphQL schema documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          ref: 'main'
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        run: cd utils && yarn install

      - name: Generate schema docs for GraphQl
        id: generate-schema
        env:
          NR_API_URL: ${{ secrets.NR_API_URL }}
          NR_API_TOKEN: ${{ secrets.NR_API_TOKEN }}
        run: cd utils && yarn generate-schema-docs

      - name: Commit changes
        id: commit-changes
        run: |
          git config --local user.email "${{ env.THIRD_PARTY_GIT_AUTHOR_EMAIL }}"
          git config --local user.name "${{ env.THIRD_PARTY_GIT_AUTHOR_NAME }}"
          git add ./docs/*
          git diff-index --quiet HEAD ./docs/* || git commit -m 'chore: generate schema documentation [skip ci]'
          echo "::set-output name=commit::true"

      - name: Temporarily disable branch protections
        id: disable-branch-protection
        if: always()
        uses: actions/github-script@v1
        with:
          github-token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          previews: luke-cage-preview
          script: |
            const result = await github.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
              required_status_checks: null,
              restrictions: null,
              enforce_admins: null,
              required_pull_request_reviews: null
            })
            console.log("Result:", result)

      - name: Push Commit
        if: steps.commit-changes.outputs.commit == 'true'
        run: git push origin HEAD

      - name: Re-enable branch protections
        id: enable-branch-protection
        if: always()
        uses: actions/github-script@v1
        with:
          github-token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          previews: luke-cage-preview
          script: |
            const result = await github.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
              required_status_checks: {
                strict: true,
                contexts: [
                    'Validation / Image count and extension compliance',
                    'Validation / Quickstart schema compliance',
                    'Validation / Conventional commit compliance',
                    'Validation / Ensure logos exist',
                    'Validation / Install plan ids exist',
                    'Validation / Install plan schema compliance',
                    'Validation / Quickstart id & name are unique'
                ]
              },
              restrictions: {
                "users":[],
                "teams":[],
                "apps":[]
              },
              enforce_admins: null,
              required_pull_request_reviews: {
                dismiss_stale_reviews: true,
                required_approving_review_count: 1,
                dismissal_restrictions: {
                  users: [],
                  teams: []
                }
              }
            })
            console.log("Result:", result)

  job-generate-release:
    name: Create Release
    needs: [generate-schema-docs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        # Ensure we have the most recent commit to `main`
        with:
          ref: 'main'
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Add plugins for semantic release
        run: npm install @semantic-release/git @semantic-release/changelog

      - name: Temporarily disable branch protections
        id: disable-branch-protection
        if: always()
        uses: actions/github-script@v1
        with:
          github-token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          previews: luke-cage-preview
          script: |
            const result = await github.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
              required_status_checks: null,
              restrictions: null,
              enforce_admins: null,
              required_pull_request_reviews: null
            })
            console.log("Result:", result)

      - name: Run semantic-release
        env:
          # Use nr-opensource-bot for authoring commits done by
          # semantic-release (rather than using @semantic-release-bot)
          GIT_AUTHOR_NAME: "nr-opensource-bot"
          GIT_AUTHOR_EMAIL: "opensource+bot@newrelic.com"
          GIT_COMMITTER_NAME: "nr-opensource-bot"
          GIT_COMMITTER_EMAIL: "opensource+bot@newrelic.com"
          GITHUB_TOKEN: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
        run: npx semantic-release@^18.0.0

      - name: Re-enable branch protections
        id: enable-branch-protection
        if: always()
        uses: actions/github-script@v1
        with:
          github-token: ${{ secrets.OPENSOURCE_BOT_TOKEN }}
          previews: luke-cage-preview
          script: |
            const result = await github.repos.updateBranchProtection({
              owner: context.repo.owner,
              repo: context.repo.repo,
              branch: 'main',
              required_status_checks: {
                strict: true,
                contexts: [
                    'Validation / Image count and extension compliance',
                    'Validation / Quickstart schema compliance',
                    'Validation / Conventional commit compliance',
                    'Validation / Ensure logos exist',
                    'Validation / Install plan ids exist',
                    'Validation / Install plan schema compliance',
                    'Validation / Quickstart id & name are unique'
                ]
              },
              restrictions: {
                "users":[],
                "teams":[],
                "apps":[]
              },
              enforce_admins: null,
              required_pull_request_reviews: {
                dismiss_stale_reviews: true,
                required_approving_review_count: 1,
                dismissal_restrictions: {
                  users: [],
                  teams: []
                }
              }
            })
            console.log("Result:", result)
